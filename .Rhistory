#separate out rookie deals
rooks = full %>%
filter(deal == 0)
#get mean WAR over first four years NOTE: this is a modeling choice - there are lots of predictors we could use aside from mean war
#you are welcome to try other functions (weighting different years, etc.)
means = rooks %>%
group_by(gsis_id) %>%
summarise_at(vars(WAR),
list(rook_mean_war = mean))
#merge in these means
full = merge(full, means, by = "gsis_id")
#separate out vets
vets = full %>%
filter(deal == 1)
#regression
lm1 = lm(TotalRealizedCapHit ~ rook_mean_war + position, data = vets)
rooks = full %>%
filter(deal == 0) %>%
select(gsis_id, position, DraftYear, rook_mean_war, TotalRealizedCapHit)
rooks = distinct(rooks)
rooks$fitted = predict.lm(lm1, rooks)
rooks$surplus = rooks$fitted - rooks$TotalRealizedCapHit
#add in draft data
rooks_w_draft = merge(rooks, draft, by.x = "gsis_id", by.y = "PlayerID" )
plot(table(rooks_w_draft$DraftNumber))
simple = rooks_w_draft[, c("gsis_id","position","surplus","DraftNumber")]
simple = distinct(simple)
mean_surplus = simple %>%
group_by(DraftNumber) %>%
summarise_at(vars(surplus),
list(avgpickval = mean))
#plot surplus over time
plot(mean_surplus)
#fitted polynomial
poly = lm(avgpickval ~ poly(DraftNumber, 4, raw = TRUE), data = mean_surplus)
mean_surplus$fit = predict.lm(poly, mean_surplus)
lines(mean_surplus$DraftNumber, mean_surplus$fit)
#load packages
library(tidyverse)
install.packages("tidyverse")
#load packages
library(tidyverse)
library(dplyr)
#read in data
war = read.csv("~/Desktop/HSAC/hsac_draft/pff_war_06_19.csv")
cap = read.csv("~/Desktop/HSAC/hsac_draft/CapHitData2006_2019 v2.csv")
draft = read.csv("~/Desktop/HSAC/hsac_draft/draft.csv")
#remove irrelevant columns
draft = subset(draft[,-c(1,4,5)], draft$Season >= 2003)
#make one row for each player
draft = distinct(draft)
#get rid of cap hits below 0 (there aren't many)
cap = subset(cap, cap$TotalRealizedCapHit >= 0)
#determine if player is on their rookie contract or not
#(if the difference between season and draft year is 0,1,2,3 it's their rookie contract)
cap$dealyr = cap$Season - cap$DraftYear + 1
cap$deal = ifelse(cap$dealyr > 4, 1, 0)
#merge cap data and war data by GSIS ID
war = war %>%
rename(Season = season)
cap = cap %>%
rename(gsis_id = GSISPlayerID)
full = merge(cap, war, by = c("gsis_id", "Season"))
#separate out rookie deals
rooks = full %>%
filter(deal == 0)
#get mean WAR over first four years NOTE: this is a modeling choice - there are lots of predictors we could use aside from mean war
#you are welcome to try other functions (weighting different years, etc.)
means = rooks %>%
group_by(gsis_id) %>%
summarise_at(vars(WAR),
list(rook_mean_war = mean))
#merge in these means
full = merge(full, means, by = "gsis_id")
#separate out vets
vets = full %>%
filter(deal == 1)
#regression
lm1 = lm(TotalRealizedCapHit ~ rook_mean_war + position, data = vets)
rooks = full %>%
filter(deal == 0) %>%
select(gsis_id, position, DraftYear, rook_mean_war, TotalRealizedCapHit)
rooks = distinct(rooks)
rooks$fitted = predict.lm(lm1, rooks)
rooks$surplus = rooks$fitted - rooks$TotalRealizedCapHit
#add in draft data
rooks_w_draft = merge(rooks, draft, by.x = "gsis_id", by.y = "PlayerID" )
plot(table(rooks_w_draft$DraftNumber))
simple = rooks_w_draft[, c("gsis_id","position","surplus","DraftNumber")]
simple = distinct(simple)
mean_surplus = simple %>%
group_by(DraftNumber) %>%
summarise_at(vars(surplus),
list(avgpickval = mean))
#plot surplus over time
plot(mean_surplus)
#fitted polynomial
poly = lm(avgpickval ~ poly(DraftNumber, 4, raw = TRUE), data = mean_surplus)
mean_surplus$fit = predict.lm(poly, mean_surplus)
lines(mean_surplus$DraftNumber, mean_surplus$fit)
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyverse")
#load packages
library(tidyverse)
library(dplyr)
#read in data
war = read.csv("~/Desktop/HSAC/hsac_draft/pff_war_06_19.csv")
cap = read.csv("~/Desktop/HSAC/hsac_draft/CapHitData2006_2019 v2.csv")
draft = read.csv("~/Desktop/HSAC/hsac_draft/draft.csv")
#remove irrelevant columns
draft = subset(draft[,-c(1,4,5)], draft$Season >= 2003)
#make one row for each player
draft = distinct(draft)
#get rid of cap hits below 0 (there aren't many)
cap = subset(cap, cap$TotalRealizedCapHit >= 0)
#determine if player is on their rookie contract or not
#(if the difference between season and draft year is 0,1,2,3 it's their rookie contract)
cap$dealyr = cap$Season - cap$DraftYear + 1
cap$deal = ifelse(cap$dealyr > 4, 1, 0)
#merge cap data and war data by GSIS ID
war = war %>%
rename(Season = season)
cap = cap %>%
rename(gsis_id = GSISPlayerID)
full = merge(cap, war, by = c("gsis_id", "Season"))
#separate out rookie deals
rooks = full %>%
filter(deal == 0)
#get mean WAR over first four years NOTE: this is a modeling choice - there are lots of predictors we could use aside from mean war
#you are welcome to try other functions (weighting different years, etc.)
means = rooks %>%
group_by(gsis_id) %>%
summarise_at(vars(WAR),
list(rook_mean_war = mean))
#merge in these means
full = merge(full, means, by = "gsis_id")
#separate out vets
vets = full %>%
filter(deal == 1)
#regression
lm1 = lm(TotalRealizedCapHit ~ rook_mean_war + position, data = vets)
rooks = full %>%
filter(deal == 0) %>%
select(gsis_id, position, DraftYear, rook_mean_war, TotalRealizedCapHit)
rooks = distinct(rooks)
rooks$fitted = predict.lm(lm1, rooks)
rooks$surplus = rooks$fitted - rooks$TotalRealizedCapHit
#add in draft data
rooks_w_draft = merge(rooks, draft, by.x = "gsis_id", by.y = "PlayerID" )
plot(table(rooks_w_draft$DraftNumber))
simple = rooks_w_draft[, c("gsis_id","position","surplus","DraftNumber")]
simple = distinct(simple)
mean_surplus = simple %>%
group_by(DraftNumber) %>%
summarise_at(vars(surplus),
list(avgpickval = mean))
#plot surplus over time
plot(mean_surplus)
#fitted polynomial
poly = lm(avgpickval ~ poly(DraftNumber, 4, raw = TRUE), data = mean_surplus)
mean_surplus$fit = predict.lm(poly, mean_surplus)
lines(mean_surplus$DraftNumber, mean_surplus$fit)
#load packages
library(tidyverse)
install.packages("tidyverse",dependencies=TRUE)
#load packages
library(tidyverse)
library(dplyr)
#read in data
war = read.csv("~/Desktop/HSAC/hsac_draft/pff_war_06_19.csv")
cap = read.csv("~/Desktop/HSAC/hsac_draft/CapHitData2006_2019 v2.csv")
draft = read.csv("~/Desktop/HSAC/hsac_draft/draft.csv")
#remove irrelevant columns
draft = subset(draft[,-c(1,4,5)], draft$Season >= 2003)
#make one row for each player
draft = distinct(draft)
#get rid of cap hits below 0 (there aren't many)
cap = subset(cap, cap$TotalRealizedCapHit >= 0)
#determine if player is on their rookie contract or not
#(if the difference between season and draft year is 0,1,2,3 it's their rookie contract)
cap$dealyr = cap$Season - cap$DraftYear + 1
cap$deal = ifelse(cap$dealyr > 4, 1, 0)
#merge cap data and war data by GSIS ID
war = war %>%
rename(Season = season)
cap = cap %>%
rename(gsis_id = GSISPlayerID)
full = merge(cap, war, by = c("gsis_id", "Season"))
#separate out rookie deals
rooks = full %>%
filter(deal == 0)
#get mean WAR over first four years NOTE: this is a modeling choice - there are lots of predictors we could use aside from mean war
#you are welcome to try other functions (weighting different years, etc.)
means = rooks %>%
group_by(gsis_id) %>%
summarise_at(vars(WAR),
list(rook_mean_war = mean))
#merge in these means
full = merge(full, means, by = "gsis_id")
#separate out vets
vets = full %>%
filter(deal == 1)
#regression
lm1 = lm(TotalRealizedCapHit ~ rook_mean_war + position, data = vets)
rooks = full %>%
filter(deal == 0) %>%
select(gsis_id, position, DraftYear, rook_mean_war, TotalRealizedCapHit)
rooks = distinct(rooks)
rooks$fitted = predict.lm(lm1, rooks)
rooks$surplus = rooks$fitted - rooks$TotalRealizedCapHit
#add in draft data
rooks_w_draft = merge(rooks, draft, by.x = "gsis_id", by.y = "PlayerID" )
plot(table(rooks_w_draft$DraftNumber))
simple = rooks_w_draft[, c("gsis_id","position","surplus","DraftNumber")]
simple = distinct(simple)
mean_surplus = simple %>%
group_by(DraftNumber) %>%
summarise_at(vars(surplus),
list(avgpickval = mean))
#plot surplus over time
plot(mean_surplus)
#fitted polynomial
poly = lm(avgpickval ~ poly(DraftNumber, 4, raw = TRUE), data = mean_surplus)
mean_surplus$fit = predict.lm(poly, mean_surplus)
lines(mean_surplus$DraftNumber, mean_surplus$fit)
#load packages
library(tidyverse)
install.packages("colorspace")
#load packages
library(tidyverse)
install.packages('colorspace')
#load packages
library(tidyverse)
library("colorspace")
library("colorspace")
install.packages('colorspace')
library("colorspace")
#load packages
library(tidyverse)
library(dplyr)
#read in data
war = read.csv("~/Desktop/HSAC/hsac_draft/pff_war_06_19.csv")
cap = read.csv("~/Desktop/HSAC/hsac_draft/CapHitData2006_2019 v2.csv")
draft = read.csv("~/Desktop/HSAC/hsac_draft/draft.csv")
#remove irrelevant columns
draft = subset(draft[,-c(1,4,5)], draft$Season >= 2003)
#make one row for each player
draft = distinct(draft)
#get rid of cap hits below 0 (there aren't many)
cap = subset(cap, cap$TotalRealizedCapHit >= 0)
#determine if player is on their rookie contract or not
#(if the difference between season and draft year is 0,1,2,3 it's their rookie contract)
cap$dealyr = cap$Season - cap$DraftYear + 1
cap$deal = ifelse(cap$dealyr > 4, 1, 0)
#merge cap data and war data by GSIS ID
war = war %>%
rename(Season = season)
cap = cap %>%
rename(gsis_id = GSISPlayerID)
full = merge(cap, war, by = c("gsis_id", "Season"))
#separate out rookie deals
rooks = full %>%
filter(deal == 0)
#get mean WAR over first four years NOTE: this is a modeling choice - there are lots of predictors we could use aside from mean war
#you are welcome to try other functions (weighting different years, etc.)
means = rooks %>%
group_by(gsis_id) %>%
summarise_at(vars(WAR),
list(rook_mean_war = mean))
#merge in these means
full = merge(full, means, by = "gsis_id")
#separate out vets
vets = full %>%
filter(deal == 1)
#regression
lm1 = lm(TotalRealizedCapHit ~ rook_mean_war + position, data = vets)
rooks = full %>%
filter(deal == 0) %>%
select(gsis_id, position, DraftYear, rook_mean_war, TotalRealizedCapHit)
rooks = distinct(rooks)
rooks$fitted = predict.lm(lm1, rooks)
rooks$surplus = rooks$fitted - rooks$TotalRealizedCapHit
#add in draft data
rooks_w_draft = merge(rooks, draft, by.x = "gsis_id", by.y = "PlayerID" )
plot(table(rooks_w_draft$DraftNumber))
simple = rooks_w_draft[, c("gsis_id","position","surplus","DraftNumber")]
simple = distinct(simple)
mean_surplus = simple %>%
group_by(DraftNumber) %>%
summarise_at(vars(surplus),
list(avgpickval = mean))
#plot surplus over time
plot(mean_surplus)
#fitted polynomial
poly = lm(avgpickval ~ poly(DraftNumber, 4, raw = TRUE), data = mean_surplus)
mean_surplus$fit = predict.lm(poly, mean_surplus)
lines(mean_surplus$DraftNumber, mean_surplus$fit)
#load packages
library(tidyverse)
library(dplyr)
#read in data
war = read.csv("~/Desktop/HSAC/hsac_draft/pff_war_06_19.csv")
cap = read.csv("~/Desktop/HSAC/hsac_draft/CapHitData2006_2019 v2.csv")
draft = read.csv("~/Desktop/HSAC/hsac_draft/draft.csv")
#remove irrelevant columns
draft = subset(draft[,-c(1,4,5)], draft$Season >= 2003)
#make one row for each player
draft = distinct(draft)
#get rid of cap hits below 0 (there aren't many)
cap = subset(cap, cap$TotalRealizedCapHit >= 0)
#determine if player is on their rookie contract or not
#(if the difference between season and draft year is 0,1,2,3 it's their rookie contract)
cap$dealyr = cap$Season - cap$DraftYear + 1
cap$deal = ifelse(cap$dealyr > 4, 1, 0)
#merge cap data and war data by GSIS ID
war = war %>%
rename(Season = season)
cap = cap %>%
rename(gsis_id = GSISPlayerID)
full = merge(cap, war, by = c("gsis_id", "Season"))
#separate out rookie deals
rooks = full %>%
filter(deal == 0)
#get mean WAR over first four years NOTE: this is a modeling choice - there are lots of predictors we could use aside from mean war
#you are welcome to try other functions (weighting different years, etc.)
means = rooks %>%
group_by(gsis_id) %>%
summarise_at(vars(WAR),
list(rook_mean_war = mean))
#merge in these means
full = merge(full, means, by = "gsis_id")
#separate out vets
vets = full %>%
filter(deal == 1)
#regression
lm1 = lm(TotalRealizedCapHit ~ rook_mean_war + position, data = vets)
rooks = full %>%
filter(deal == 0) %>%
select(gsis_id, position, DraftYear, rook_mean_war, TotalRealizedCapHit)
rooks = distinct(rooks)
rooks$fitted = predict.lm(lm1, rooks)
rooks$surplus = rooks$fitted - rooks$TotalRealizedCapHit
#add in draft data
rooks_w_draft = merge(rooks, draft, by.x = "gsis_id", by.y = "PlayerID" )
plot(table(rooks_w_draft$DraftNumber))
simple = rooks_w_draft[, c("gsis_id","position","surplus","DraftNumber")]
simple = distinct(simple)
mean_surplus = simple %>%
group_by(DraftNumber) %>%
summarise_at(vars(surplus),
list(avgpickval = mean))
#plot surplus over time
plot(mean_surplus)
#fitted polynomial
poly = lm(avgpickval ~ poly(DraftNumber, 4, raw = TRUE), data = mean_surplus)
mean_surplus$fit = predict.lm(poly, mean_surplus)
lines(mean_surplus$DraftNumber, mean_surplus$fit)
rm(list=ls()) # removes all objects from the environment
cat('\014') # clears the console
# Install packages (if necessary) and load required libraries
if (!require(tidyverse)) install.packages("tidyverse"); library(tidyverse)
if (!require(haven)) install.packages("haven"); library(haven)
if (!require(ggplot2)) install.packages("ggplot2"); library(ggplot2)
if (!require(statar)) install.packages("statar"); library(statar)
## Read data
india <- read_dta("india.dta")
# HSAC NBA Project
# Fall 2021
rm(list=ls()) # Removes all objects from the environment
cat('\014') # Clears the console
# Read in the data
players <- read.csv("scraping/players.csv")
salaries <- read.csv("scraping/salaries.csv")
salary_cap <- read.csv("scraping/salary_cap.csv")
player_data <- read.csv("scraping/player_data.csv")
summary(player_data)
# Summary statistics
summary(players)
summary(salaries)
summary(salary_cap)
get_career <- function(x) {
sal <- salaries[salaries$link == x[["link"]],]
if (nrow(sal) == 0) {
return(NA)
}
return(max(sal$season) - min(sal$season))
}
get_years <- function(x) {
sal <- salaries[salaries$link == x[["link"]],]
if (nrow(sal) == 0) {
return(NA)
}
max_sal <- max(sal$salary)
max_sal_year <- min(sal$season[sal$salary == max_sal])
first_year <- min(sal$season)
return(max_sal_year - first_year)
}
get_pts_years <- function(x) {
dat <- player_data[player_data$link == x[["link"]],]
if (nrow(dat) == 0) {
return(NA)
}
max_pts <- max(dat$pts_per_g)
max_ptrs_year <- min(dat$season[dat$pts_per_g == max_pts])
first_year <- min(dat$season)
return(max_ptrs_year - first_year)
}
salaries$normalized_salary <- salaries$salary / salaries$salary_cap
# Add a column "Career" that calculates number of years in career
players$career <- apply(players, 1, FUN = get_career)
# Add a column "Time" that calculates number of years between first contract and highest contract in career
players$time <- apply(players, 1, FUN = get_years)
players$time_pts <- apply(players, 1, FUN = get_pts_years)
players$ratio <- players$time / players$career
players$ratio_pts <- players$time_pts / players$career
players$ratio_pts <- ifelse(is.infinite(players$ratio_pts), NA, players$ratio_pts)
players1 <- players[players$year <= 2002,]
mean(players1$career[players1$position != "Center"], na.rm = TRUE)
mean(players1$career[players1$position == "Center"], na.rm = TRUE)
mean(players1$time[players1$position != "Center"], na.rm = TRUE)
mean(players1$time[players1$position == "Center"], na.rm = TRUE)
mean(players1$ratio[players1$position != "Center"], na.rm = TRUE)
mean(players1$ratio[players1$position == "Center"], na.rm = TRUE)
mean(players1$time_pts[players1$position != "Center"], na.rm = TRUE)
mean(players1$time_pts[players1$position == "Center"], na.rm = TRUE)
mean(players1$ratio_pts[players1$position != "Center"], na.rm = TRUE)
mean(players1$ratio_pts[players1$position == "Center"], na.rm = TRUE)
players2 <- players[players$year > 2002 & players$year <= 2008,]
mean(players2$career[players2$position != "Center"], na.rm = TRUE)
mean(players2$career[players2$position == "Center"], na.rm = TRUE)
mean(players2$time[players2$position != "Center"], na.rm = TRUE)
mean(players2$time[players2$position == "Center"], na.rm = TRUE)
mean(players2$ratio[players2$position != "Center"], na.rm = TRUE)
mean(players2$ratio[players2$position == "Center"], na.rm = TRUE)
mean(players2$time_pts[players2$position != "Center"], na.rm = TRUE)
mean(players2$time_pts[players2$position == "Center"], na.rm = TRUE)
mean(players2$ratio_pts[players2$position != "Center"], na.rm = TRUE)
mean(players2$ratio_pts[players2$position == "Center"], na.rm = TRUE)
setwd("~/Desktop/NBA-Bigs")
# HSAC NBA Project
# Fall 2021
rm(list=ls()) # Removes all objects from the environment
cat('\014') # Clears the console
# Read in the data
players <- read.csv("scraping/players.csv")
salaries <- read.csv("scraping/salaries.csv")
salary_cap <- read.csv("scraping/salary_cap.csv")
player_data <- read.csv("scraping/player_data.csv")
summary(player_data)
# Summary statistics
summary(players)
summary(salaries)
summary(salary_cap)
get_career <- function(x) {
sal <- salaries[salaries$link == x[["link"]],]
if (nrow(sal) == 0) {
return(NA)
}
return(max(sal$season) - min(sal$season))
}
get_years <- function(x) {
sal <- salaries[salaries$link == x[["link"]],]
if (nrow(sal) == 0) {
return(NA)
}
max_sal <- max(sal$salary)
max_sal_year <- min(sal$season[sal$salary == max_sal])
first_year <- min(sal$season)
return(max_sal_year - first_year)
}
get_pts_years <- function(x) {
dat <- player_data[player_data$link == x[["link"]],]
if (nrow(dat) == 0) {
return(NA)
}
max_pts <- max(dat$pts_per_g)
max_ptrs_year <- min(dat$season[dat$pts_per_g == max_pts])
first_year <- min(dat$season)
return(max_ptrs_year - first_year)
}
salaries$normalized_salary <- salaries$salary / salaries$salary_cap
# Add a column "Career" that calculates number of years in career
players$career <- apply(players, 1, FUN = get_career)
# Add a column "Time" that calculates number of years between first contract and highest contract in career
players$time <- apply(players, 1, FUN = get_years)
players$time_pts <- apply(players, 1, FUN = get_pts_years)
players$ratio <- players$time / players$career
players$ratio_pts <- players$time_pts / players$career
players$ratio_pts <- ifelse(is.infinite(players$ratio_pts), NA, players$ratio_pts)
players1 <- players[players$year <= 2002,]
mean(players1$career[players1$position != "Center"], na.rm = TRUE)
mean(players1$career[players1$position == "Center"], na.rm = TRUE)
mean(players1$time[players1$position != "Center"], na.rm = TRUE)
mean(players1$time[players1$position == "Center"], na.rm = TRUE)
mean(players1$ratio[players1$position != "Center"], na.rm = TRUE)
mean(players1$ratio[players1$position == "Center"], na.rm = TRUE)
mean(players1$time_pts[players1$position != "Center"], na.rm = TRUE)
mean(players1$time_pts[players1$position == "Center"], na.rm = TRUE)
mean(players1$ratio_pts[players1$position != "Center"], na.rm = TRUE)
mean(players1$ratio_pts[players1$position == "Center"], na.rm = TRUE)
players2 <- players[players$year > 2002 & players$year <= 2008,]
mean(players2$career[players2$position != "Center"], na.rm = TRUE)
mean(players2$career[players2$position == "Center"], na.rm = TRUE)
mean(players2$time[players2$position != "Center"], na.rm = TRUE)
mean(players2$time[players2$position == "Center"], na.rm = TRUE)
mean(players2$ratio[players2$position != "Center"], na.rm = TRUE)
mean(players2$ratio[players2$position == "Center"], na.rm = TRUE)
mean(players2$time_pts[players2$position != "Center"], na.rm = TRUE)
mean(players2$time_pts[players2$position == "Center"], na.rm = TRUE)
mean(players2$ratio_pts[players2$position != "Center"], na.rm = TRUE)
mean(players2$ratio_pts[players2$position == "Center"], na.rm = TRUE)
